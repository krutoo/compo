{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/library/js/index.js","webpack:///./src/library/js/utils.js","webpack:///./src/library/js/render.js","webpack:///./src/library/js/pack.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","pack","render","classOf","toString","slice","_utils","templates","Map","anchorsRegex","_ref","rootElement","needKeepContent","htmlString","valuesMap","isPack","arguments","TypeError","template","getTemplate","replaceAnchors","node","Element","hasChildNodes","concat","_toConsumableArray","childNodes","forEach","test","nodeValue","templateString","replace","match","childNode","parentNode","insertBefore","remove","processNode","child","element","attributes","_ref2","trim","targetValue","setAttribute","removeAttribute","addEventListener","innerHTML","SyntaxError","processAttributes","Comment","commentNode","newElement","createTemplate","String","replaceWith","firstChild","item","processComment","children","length","RangeError","insertAdjacentElement","has","set","cloneNode","asText","templateElement","document","createElement","insertAdjacentText","insertAdjacentHTML","content","hasTemplate","hasMap","getAnchor","keys","strings","parts","_len","values","Array","_key","index","push","anchor","join","freeze"],"mappings":"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","file":"js/packmar.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import pack from './pack';\r\nimport render from './render';\r\n\r\nexport { pack, render };\r\n","/**\r\n * Return a class name of input value (true way to get it).\r\n * @param {*} value Value to define it class.\r\n * @return {string} Name of class.\r\n */\r\nexport const classOf = value => Object.prototype.toString.call(value).slice(8, -1);\r\n","import { classOf } from './utils';\r\n\r\nconst templates = new Map();\r\nconst anchorsRegex = /{%\\d*%}/g;\r\n\r\n/**\r\n * Render packed element.\r\n * @param {Object} pack Packed element.\r\n * @param {Element} [rootElement] Element to place packed element into.\r\n * @param {boolean} [needKeepContent] Need keep root element content?.\r\n * @return {Element} unpacked element, normal dom node.\r\n */\r\nexport default function render ({ htmlString, valuesMap }, rootElement, needKeepContent) {\r\n\tif (!isPack(arguments[0])) {\r\n\t\tthrow new TypeError('First argument must be packed element');\r\n\t}\r\n\tconst template = getTemplate(htmlString);\r\n\treplaceAnchors(template);\r\n\tprocessNode(template, valuesMap);\r\n\tif (template.children.length !== 1) {\r\n\t\tthrow new RangeError('Template must contains only one element');\r\n\t}\r\n\tif (rootElement instanceof Element) {\r\n\t\tif (!needKeepContent) {\r\n\t\t\trootElement.innerHTML = '';\r\n\t\t}\r\n\t\tif (template.children.length) {\r\n\t\t\trootElement.insertAdjacentElement('beforeEnd', template.children[0]);\r\n\t\t}\r\n\t}\r\n\treturn template.children[0];\r\n}\r\n\r\n/**\r\n * Returns template element for HTML-string.\r\n * @param {string} htmlString HTML string.\r\n * @return {Element} Template element.\r\n */\r\nfunction getTemplate (htmlString) {\r\n\tlet template;\r\n\tif (templates.has(htmlString)) {\r\n\t\ttemplate = templates.get(htmlString);\r\n\t} else {\r\n\t\ttemplate = createTemplate(htmlString);\r\n\t\ttemplates.set(htmlString, template);\r\n\t}\r\n\treturn template.cloneNode(true);\r\n}\r\n\r\n/**\r\n * Replaces anchors by anchor-comments in element.\r\n * @param {Node} node Node to replace anchors in it.\r\n */\r\nfunction replaceAnchors (node) {\r\n\tif (node instanceof Element) {\r\n\t\tif (node.hasChildNodes()) {\r\n\t\t\t[...node.childNodes].forEach(node => replaceAnchors(node));\r\n\t\t}\r\n\t} else if (anchorsRegex.test(node.nodeValue)) {\r\n\t\tconst templateString = node.nodeValue.replace(anchorsRegex, match => `<!--${match}-->`);\r\n\t\tconst template = getTemplate(templateString);\r\n\t\t[...template.childNodes].forEach(childNode => {\r\n\t\t\tnode.parentNode.insertBefore(childNode, node);\r\n\t\t});\r\n\t\tnode.remove();\r\n\t}\r\n}\r\n\r\n/**\r\n * Processes node. Inserts values from map instead of anchor-comments.\r\n * @param {Node} node Node to process.\r\n * @param {Object} valuesMap Values map.\r\n */\r\nfunction processNode (node, valuesMap) {\r\n\tif (node.hasChildNodes()) {\r\n\t\t[...node.childNodes].forEach(child => processNode(child, valuesMap));\r\n\t}\r\n\tif (node instanceof Element) {\r\n\t\tprocessAttributes(node, valuesMap);\r\n\t} else if (node instanceof Comment) {\r\n\t\tprocessComment(node, valuesMap);\r\n\t}\r\n}\r\n\r\n/**\r\n * Processes anchor-comment. Inserts value from map instead of comment.\r\n * @param {Node} commentNode Comment node to process.\r\n * @param {Object} valuesMap Values map.\r\n */\r\nfunction processComment (commentNode, valuesMap) {\r\n\tconst key = commentNode.nodeValue;\r\n\tif (valuesMap.hasOwnProperty(key)) {\r\n\t\tconst value = valuesMap[key];\r\n\t\tswitch (classOf(value)) {\r\n\t\t\tcase 'Boolean':\r\n\t\t\tcase 'Number':\r\n\t\t\tcase 'String': {\r\n\t\t\t\tconst newElement = createTemplate(String(value), true);\r\n\t\t\t\tcommentNode.replaceWith(newElement.firstChild);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'Array': {\r\n\t\t\t\tvalue.forEach(item => {\r\n\t\t\t\t\tif (isPack(item)) {\r\n\t\t\t\t\t\tcommentNode.parentNode.insertBefore(render(item), commentNode);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthrow new TypeError('Only the packed elements can be in the arrays');\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tdefault: {\r\n\t\t\t\tif (isPack(value)) {\r\n\t\t\t\t\tcommentNode.parentNode.insertBefore(render(value), commentNode);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcommentNode.remove();\r\n\t}\r\n}\r\n\r\n/**\r\n * Processes attributes of element. Inserts value from map instead of anchors.\r\n * @param {Element} element Element for processing its attributes.\r\n * @param {Object} valuesMap Values map.\r\n */\r\nfunction processAttributes (element, valuesMap) {\r\n\t[...element.attributes].forEach(({ name, value }) => {\r\n\t\tif (valuesMap.hasOwnProperty(value.trim())) {\r\n\t\t\telement.valuesMap = element.valuesMap || {};\r\n\t\t\tconst targetValue = valuesMap[value.trim()];\r\n\t\t\tswitch (classOf(targetValue)) {\r\n\t\t\t\tcase 'Number':\r\n\t\t\t\tcase 'String': {\r\n\t\t\t\t\telement.setAttribute(name, targetValue);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tcase 'Boolean': {\r\n\t\t\t\t\tif (targetValue) {\r\n\t\t\t\t\t\telement.setAttribute(name, '');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\telement.removeAttribute(name);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tcase 'Function': {\r\n\t\t\t\t\telement.removeAttribute(name);\r\n\t\t\t\t\telement.addEventListener(name, targetValue);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tdefault: {\r\n\t\t\t\t\tif (isPack(targetValue)) {\r\n\t\t\t\t\t\telement.setAttribute(name, render(targetValue).innerHTML);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\telement.removeAttribute(name);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (valuesMap.hasOwnProperty(name.trim())) {\r\n\t\t\tconst targetValue = valuesMap[name.trim()];\r\n\t\t\telement.removeAttribute(name);\r\n\t\t\telement.setAttribute(targetValue, true);\r\n\t\t} else if (value.match(anchorsRegex)) {\r\n\t\t\tthrow new SyntaxError(`In \"${name}\" attribute: only one string or one expression must be in value`);\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/**\r\n * Returns new DIV element with content from HTML string.\r\n * @param {string} htmlString HTML string.\r\n * @param {boolean} asText Need parse string as simple text?\r\n * @return {Element} New DIV element.\r\n */\r\nfunction createTemplate (htmlString, asText) {\r\n\tconst template = String(htmlString || '').trim();\r\n\tconst templateElement = document.createElement('div');\r\n\tif (asText) {\r\n\t\ttemplateElement.insertAdjacentText('afterBegin', template);\r\n\t} else {\r\n\t\ttemplateElement.insertAdjacentHTML('afterBegin', template);\r\n\t}\r\n\treturn templateElement;\r\n}\r\n\r\n/**\r\n * Verifies that value is a markup package.\r\n * @param {*} value Checked value.\r\n * @return {boolean} Value is a valid package?\r\n */\r\nfunction isPack (value) {\r\n\tconst content = { ...value };\r\n\tconst hasTemplate = classOf(content.htmlString) === 'String';\r\n\tconst hasMap = classOf(content.valuesMap) === 'Object';\r\n\treturn hasTemplate && hasMap;\r\n}\r\n","/**\r\n * Tag for template literals. Returns the packed element.\r\n * @param {Array} strings String part of template literal.\r\n * @param {...*} values Values part.\r\n * @return {Object} Packed element.\r\n */\r\nexport default function pack (strings, ...values) {\r\n\tconst parts = [];\r\n\tconst valuesMap = {};\r\n\tfor (let index = 0; index < strings.length; index++) {\r\n\t\tparts.push(strings[index]);\r\n\t\tif (values.hasOwnProperty(index)) {\r\n\t\t\tconst anchor = getAnchor(valuesMap);\r\n\t\t\tvaluesMap[anchor] = values[index];\r\n\t\t\tparts.push(anchor);\r\n\t\t}\r\n\t}\r\n\tconst htmlString = parts.join('').trim();\r\n\treturn Object.freeze({ htmlString, valuesMap });\r\n}\r\n\r\n/**\r\n * Returns anchor.\r\n * @param {Object} valuesMap Values map.\r\n * @return {string} Anchor for template.\r\n */\r\nfunction getAnchor (valuesMap) {\r\n\tconst length = Object.keys(valuesMap).length;\r\n\treturn `{%${length}%}`;\r\n}\r\n"],"sourceRoot":""}